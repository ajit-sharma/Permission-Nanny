apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'com.getkeepsafe.dexcount'

initFabricProperties()

android {
    compileSdkVersion project.compileSdk
    buildToolsVersion project.buildTools

    defaultConfig {
        applicationId "com.permissionnanny"
        minSdkVersion project.minSdk
        targetSdkVersion project.targetSdk
        versionCode project.versionCode
        versionName project.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        Properties properties = new Properties()
        properties.load(file('fabric.properties').newDataInputStream())
        manifestPlaceholders = [fabricApiKey: properties.getProperty("apiKey")]
    }
    signingConfigs {
        release {
            Properties properties = new Properties()
            properties.load(project.rootProject.file('google-play.properties').newDataInputStream())

            storeFile project.rootProject.file('google-play.jks')
            storePassword properties.getProperty("STORE_PASSWORD")
            keyAlias properties.getProperty("KEY_ALIAS")
            keyPassword properties.getProperty("KEY_PASSWORD")
        }
    }
    buildTypes {
        debug {
            applicationIdSuffix '.debug'
            // Disable fabric build ID generation for debug builds
            ext.enableCrashlytics = false
        }
        release {
            signingConfig signingConfigs.release
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    lintOptions {
        lintConfig project.rootProject.file('lint.xml')
    }
    sourceSets {
        test {
            java.srcDirs += 'src/commonTest/java'
        }
    }
    packagingOptions {
        exclude 'LICENSE.txt'
    }
}

dependencies {
    apt project.daggerCompiler

    compile project.design
    compile project.supportV4
    compile project.appcompatV7
    compile project.cardviewV7
    compile project.recyclerviewV7

    compile project(':common')
    compile project(':lib')
    compile('com.crashlytics.sdk.android:crashlytics:2.5.3@aar') { transitive = true; }
    compile project.dagger
    compile project.butterknife
    compile project.javaxAnnotation
    compile project.javaxInject
    compile project.kryo
    compile project.leveldb
    compile project.mbassador
    compile project.timber

    testCompile project(':commonTest')

    androidTestCompile project.junit
    androidTestCompile project.mockitoCore
    androidTestCompile project.dexmakerMockito
    androidTestCompile project.runner
    androidTestCompile project.rules
    androidTestCompile project.espressoCore
    androidTestCompile project.asm
    androidTestCompile project.objenesis
}

def initFabricProperties() {
    if (System.env.CI) {
        def commentMessage = "Contains API Secret used to validate your application. Commit to internal source control; avoid making secret public."
        ant.propertyfile(file: "fabric.properties", comment: commentMessage) {
            entry(key: "apiSecret", value: "${System.env.CRASHLYTICS_API_SECRET}")
            entry(key: "apiKey", value: "${System.env.CRASHLYTICS_API_KEY}")
        }
    }
}
